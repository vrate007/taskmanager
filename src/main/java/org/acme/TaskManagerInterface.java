package org.acme;

import java.util.List;
import java.util.Optional; // üåü –Ü–º–ø–æ—Ä—Ç Optional

public interface TaskManagerInterface {

    // --- C (Create) ---
    // üåü –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –æ–±'—î–∫—Ç Task
    Task addTask(String title, TaskPriority priority);

    // --- R (Read) ---
    List<Task> getAllTasks();
    // üåü –î–æ–¥–∞—î–º–æ –º–µ—Ç–æ–¥ –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è –∑–∞ ID –∑ Optional
    Optional<Task> getTaskById(long id);

    // --- U (Update) ---

    // üåü –£–∑–∞–≥–∞–ª—å–Ω–µ–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è. –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ Optional<Task>
    Optional<Task> updateTask(long id, String newTitle, TaskStatus newStatus, TaskPriority newPriority);

    // –Ü—Å–Ω—É—é—á—ñ –º–µ—Ç–æ–¥–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –º–æ–∂–Ω–∞ –∑–∞–ª–∏—à–∏—Ç–∏ –¥–ª—è —Å–ø—Ä–æ—â–µ–Ω–Ω—è –±—ñ–∑–Ω–µ—Å-–ª–æ–≥—ñ–∫–∏
    boolean updateTaskStatus(long id, TaskStatus newStatus);
    boolean updateTaskPriority(long id, TaskPriority newPriority);

    // --- D (Delete) ---
    boolean removeTask(long id);

    // --- –ü–æ—à—É–∫ —Ç–∞ –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è ---
    List<Task> findTasksByTitle(String title);
    List<Task> filterTasksByStatus(TaskStatus status);
    List<Task> filterTasksByPriority(TaskPriority priority);

    // --- –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è ---
    List<Task> sortTasksByCreatedAt();
    List<Task> sortTasksByPriority();
    List<Task> sortTasksByStatus();
}