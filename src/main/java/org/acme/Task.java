package org.acme;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Objects;

public class Task {
    private static long nextId = 1;
    private final long id;
    private String title;
    private TaskStatus status;
    private TaskPriority priority;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;

    // –°–ø—ñ–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–ª—å–Ω–∏–∫, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –¥—É–±–ª—é–≤–∞–Ω–Ω—è
    private static final DateTimeFormatter FILE_FORMATTER = DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm:ss");

    // --- 1. –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º (–î–õ–Ø –§–†–ï–ô–ú–í–û–†–ö–Ü–í) ---
    public Task() {
        this.id = -1; // –¢–∏–º—á–∞—Å–æ–≤–∏–π ID. –ù–æ–≤—ñ –æ–±'—î–∫—Ç–∏ —Å—Ç–≤–æ—Ä—é–π—Ç–µ —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä!
    }

    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è –Ω–æ–≤–∏—Ö –∑–∞–¥–∞—á
    public Task(String title, TaskPriority priority) {
        this.id = nextId++;
        this.title = title;
        this.status = TaskStatus.NEW;
        this.priority = priority;
        this.createdAt = LocalDateTime.now();
        this.updatedAt = LocalDateTime.now();
    }

    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–∏—Ö –∑–∞–¥–∞—á –∑ —Ñ–∞–π–ª—É
    public Task(long id, String title, TaskStatus status, TaskPriority priority, LocalDateTime createdAt, LocalDateTime updatedAt) {
        this.id = id;
        this.title = title;
        this.status = status;
        this.priority = priority;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    // --- –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è ID ---

    public static void setNextId(long maxId) {
        if (maxId >= nextId) {
            nextId = maxId + 1;
        }
    }

    // --- –ì–µ—Ç—Ç–µ—Ä–∏ —Ç–∞ –°–µ—Ç—Ç–µ—Ä–∏ ---

    public long getId() {
        return id;
    }

    public String getTitle() {
        return title;
    }

    // üåü –î–æ–¥–∞–Ω–æ —Å–µ—Ç—Ç–µ—Ä –¥–ª—è title
    public void setTitle(String title) {
        this.title = title;
        this.updatedAt = LocalDateTime.now();
    }

    public TaskStatus getStatus() {
        return status;
    }

    public void setStatus(TaskStatus status) {
        this.status = status;
        this.updatedAt = LocalDateTime.now();
    }

    public TaskPriority getPriority() {
        return priority;
    }

    public void setPriority(TaskPriority priority) {
        this.priority = priority;
        this.updatedAt = LocalDateTime.now();
    }

    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    // üåü –î–æ–¥–∞–Ω–æ —Å–µ—Ç—Ç–µ—Ä –¥–ª—è createdAt (–¥–ª—è –≥–Ω—É—á–∫–æ—Å—Ç—ñ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ/–æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    // üåü –î–æ–¥–∞–Ω–æ —Å–µ—Ç—Ç–µ—Ä –¥–ª—è updatedAt (–∫–æ—Ä–∏—Å–Ω–æ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ TaskFileHandler)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    // --- –ü–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ñ—Å—Ç—å (FileHandler) ---

    public static String getHeader() {
        return "id,title,status,priority,createdAt,updatedAt";
    }

    @Override
    public String toString() {
        String formattedCreatedAt = createdAt.format(FILE_FORMATTER);
        String formattedUpdatedAt = updatedAt.format(FILE_FORMATTER);

        return String.format(
                "%d," +
                        "%s," +
                        "%s," +
                        "%s," +
                        "%s," +
                        "%s",
                id, title, status, priority, formattedCreatedAt, formattedUpdatedAt
        );
    }

    // --- üåü –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤ (–ö–†–ò–¢–ò–ß–ù–û –í–ê–ñ–õ–ò–í–û) ---

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        // –ú–∏ –≤–≤–∞–∂–∞—î–º–æ –¥–≤—ñ –∑–∞–¥–∞—á—ñ –æ–¥–Ω–∞–∫–æ–≤–∏–º–∏, —è–∫—â–æ —ó—Ö–Ω—ñ ID —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å
        Task task = (Task) o;
        return id == task.id;
    }

    @Override
    public int hashCode() {
        // –•–µ—à-–∫–æ–¥ –±–∞–∑—É—î—Ç—å—Å—è –ª–∏—à–µ –Ω–∞ ID
        return Objects.hash(id);
    }
}